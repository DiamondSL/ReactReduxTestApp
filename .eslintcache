[{"C:\\work\\udemy react\\redux\\reduxreact2\\src\\index.js":"1","C:\\work\\udemy react\\redux\\reduxreact2\\src\\App.js":"2","C:\\work\\udemy react\\redux\\reduxreact2\\src\\components\\Layout\\Layout.js":"3","C:\\work\\udemy react\\redux\\reduxreact2\\src\\components\\Cart\\Cart.js":"4","C:\\work\\udemy react\\redux\\reduxreact2\\src\\components\\Shop\\Products.js":"5","C:\\work\\udemy react\\redux\\reduxreact2\\src\\components\\Cart\\CartItem.js":"6","C:\\work\\udemy react\\redux\\reduxreact2\\src\\components\\Layout\\MainHeader.js":"7","C:\\work\\udemy react\\redux\\reduxreact2\\src\\components\\Shop\\ProductItem.js":"8","C:\\work\\udemy react\\redux\\reduxreact2\\src\\components\\UI\\Card.js":"9","C:\\work\\udemy react\\redux\\reduxreact2\\src\\components\\Cart\\CartButton.js":"10","C:\\work\\udemy react\\redux\\reduxreact2\\src\\store\\store.js":"11","C:\\work\\udemy react\\redux\\reduxreact2\\src\\store\\showCartState.js":"12","C:\\work\\udemy react\\redux\\reduxreact2\\src\\store\\itemsCartState.js":"13","C:\\work\\udemy react\\redux\\reduxreact2\\src\\components\\Shop\\ItemForm.js":"14","C:\\work\\udemy react\\redux\\reduxreact2\\src\\store\\showFormState.js":"15"},{"size":262,"mtime":1641315713136,"results":"16","hashOfConfig":"17"},{"size":788,"mtime":1641329402327,"results":"18","hashOfConfig":"17"},{"size":233,"mtime":1641243851492,"results":"19","hashOfConfig":"17"},{"size":808,"mtime":1641327278546,"results":"20","hashOfConfig":"17"},{"size":1512,"mtime":1641336243515,"results":"21","hashOfConfig":"17"},{"size":1198,"mtime":1641325791321,"results":"22","hashOfConfig":"17"},{"size":361,"mtime":1616596383000,"results":"23","hashOfConfig":"17"},{"size":819,"mtime":1641327487479,"results":"24","hashOfConfig":"17"},{"size":244,"mtime":1616596383000,"results":"25","hashOfConfig":"17"},{"size":960,"mtime":1641329046181,"results":"26","hashOfConfig":"17"},{"size":565,"mtime":1641335656037,"results":"27","hashOfConfig":"17"},{"size":346,"mtime":1641317395496,"results":"28","hashOfConfig":"17"},{"size":2211,"mtime":1641336341358,"results":"29","hashOfConfig":"17"},{"size":2154,"mtime":1641335558615,"results":"30","hashOfConfig":"17"},{"size":346,"mtime":1641335832105,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oxq2mw",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\work\\udemy react\\redux\\reduxreact2\\src\\index.js",[],"C:\\work\\udemy react\\redux\\reduxreact2\\src\\App.js",[],"C:\\work\\udemy react\\redux\\reduxreact2\\src\\components\\Layout\\Layout.js",[],["67","68"],"C:\\work\\udemy react\\redux\\reduxreact2\\src\\components\\Cart\\Cart.js",["69"],"import Card from '../UI/Card';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\nimport {useSelector } from 'react-redux';\n\n\nconst Cart = (props) => {\n  const CartItems = useSelector((state) => state.items);\n\n  const processedItems = CartItems.items.map((item, index) => {\n    if(item.quantity > 0){\n    return <CartItem item={{title: item.title, quantity: item.quantity, total: item.total, price: item.price}} key={index} />\n    }\n    else {\n      return\n    }\n  })\n\n  console.log(CartItems.items)\n\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {/* <CartItem\n          item={{ title: 'Test Item', quantity: 3, total: 18, price: 6 }}\n        /> */}\n        {processedItems}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","C:\\work\\udemy react\\redux\\reduxreact2\\src\\components\\Shop\\Products.js",[],"C:\\work\\udemy react\\redux\\reduxreact2\\src\\components\\Cart\\CartItem.js",["70"],"import classes from './CartItem.module.css';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { CartItemsActions } from '../../store/store';\n\nconst CartItem = (props) => {\n  const CartItems = useSelector((state) => state.items);\n  const dispatchItem = useDispatch();\n  const { title, quantity, total, price } = props.item;\n\n  const addItemHandler = () => {\n    dispatchItem(CartItemsActions.addItem(title));\n    console.log(title);\n  }\n\n  const removeItemHandler = () => {\n    dispatchItem(CartItemsActions.removeItem(title));\n    console.log(title);\n  }\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{' '}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeItemHandler}>-</button>\n          <button onClick={addItemHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","C:\\work\\udemy react\\redux\\reduxreact2\\src\\components\\Layout\\MainHeader.js",[],"C:\\work\\udemy react\\redux\\reduxreact2\\src\\components\\Shop\\ProductItem.js",["71"],"import Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { CartItemsActions } from '../../store/store';\n\nconst ProductItem = (props) => {\n  const { title, price, description } = props;\n  const dispatchItem = useDispatch();\n\n  const addItemHandler = () => {\n    dispatchItem(CartItemsActions.addItem(title));\n    console.log(title);\n  }\n\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addItemHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","C:\\work\\udemy react\\redux\\reduxreact2\\src\\components\\UI\\Card.js",[],"C:\\work\\udemy react\\redux\\reduxreact2\\src\\components\\Cart\\CartButton.js",[],"C:\\work\\udemy react\\redux\\reduxreact2\\src\\store\\store.js",[],"C:\\work\\udemy react\\redux\\reduxreact2\\src\\store\\showCartState.js",[],"C:\\work\\udemy react\\redux\\reduxreact2\\src\\store\\itemsCartState.js",["72","73","74","75","76"],"import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCartItemsState = {items : [{title: 'Test Item 1', quantity: 1, total: 6, price: 6}, {title: 'Test Item 2', quantity: 0, total: 0, price: 10} ] };\r\n\r\n\r\nconst CartItemsSlice = createSlice({\r\n    name: 'CartItems',\r\n    initialState: initialCartItemsState,\r\n    reducers: {\r\n        addNewProduct(state, action){\r\n            let newArray = [...state.items];\r\n            newArray.push(action.payload);\r\n            state.items = newArray;\r\n        },\r\n        addItem(state, action) {\r\n            let newArray = [...state.items];\r\n            let findItem;\r\n\r\n             //looking for item that we currently need through comparing title that we passed through payload and item title\r\n            //then we take current item index to work with this element\r\n            //i could add id to every item to make my work easier\r\n            //but it's also was made to show some another way of doing it\r\n\r\n            state.items.forEach((item, index) => {\r\n            if(item.title == action.payload)\r\n            {\r\n                findItem = index;\r\n                newArray[index].quantity = item.quantity + 1;\r\n                newArray[index].total = Number(item.price) * Number(item.quantity);\r\n                console.log(newArray[index]);\r\n            }\r\n\r\n            return (\r\n            state.items = newArray\r\n            )\r\n    })\r\n},\r\n        removeItem(state, action) { let newArray = [...state.items];\r\n            let findItem;\r\n\r\n            state.items.forEach((item, index) => {\r\n            if(item.title == action.payload)\r\n            {\r\n                findItem = index;\r\n                if(item.quantity != 0){\r\n                    //this if/else statement used to prevent negative values \r\n                newArray[index].quantity = item.quantity - 1;\r\n                newArray[index].total = newArray[index].total - newArray[index].price;\r\n                console.log(newArray[index]);\r\n                }\r\n                else {\r\n                    return\r\n                }\r\n            }\r\n\r\n            return (\r\n            state.items = newArray\r\n            )\r\n    })},\r\n    }\r\n\r\n})\r\n\r\nexport default CartItemsSlice;","C:\\work\\udemy react\\redux\\reduxreact2\\src\\components\\Shop\\ItemForm.js",[],"C:\\work\\udemy react\\redux\\reduxreact2\\src\\store\\showFormState.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":15,"column":7,"nodeType":"83","messageId":"84","endLine":15,"endColumn":13},{"ruleId":"85","severity":1,"message":"86","line":6,"column":9,"nodeType":"87","messageId":"88","endLine":6,"endColumn":18},{"ruleId":"85","severity":1,"message":"89","line":3,"column":9,"nodeType":"87","messageId":"88","endLine":3,"endColumn":20},{"ruleId":"85","severity":1,"message":"90","line":17,"column":17,"nodeType":"87","messageId":"88","endLine":17,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":25,"column":27,"nodeType":"93","messageId":"94","endLine":25,"endColumn":29},{"ruleId":"85","severity":1,"message":"90","line":39,"column":17,"nodeType":"87","messageId":"88","endLine":39,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":42,"column":27,"nodeType":"93","messageId":"94","endLine":42,"endColumn":29},{"ruleId":"91","severity":1,"message":"95","line":45,"column":34,"nodeType":"93","messageId":"94","endLine":45,"endColumn":36},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-unused-vars","'CartItems' is assigned a value but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'findItem' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]