{"ast":null,"code":"import ProductItem from\"./ProductItem\";import classes from\"./Products.module.css\";import{useSelector,useDispatch}from\"react-redux\";import Card from\"../UI/Card\";import ItemForm from\"./ItemForm\";import{CartItemsActions,formIsShownActions}from\"../../store/store\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Products=function Products(props){var CartItems=useSelector(function(state){return state.items;});var formIsShown=useSelector(function(state){return state.showForm.FormIsShown;});var dispatch=useDispatch();var toggleFormHandler=function toggleFormHandler(){dispatch(formIsShownActions.showForm());};var addNewItemHandler=function addNewItemHandler(info){var newItemProduct={title:info.title,price:info.price,quantity:0,total:0};dispatch(CartItemsActions.addNewProduct(newItemProduct));toggleFormHandler();};var processedItems=CartItems.items.map(function(item,index){return/*#__PURE__*/_jsx(ProductItem,{title:item.title,price:item.price,description:\"basic description\"},index);});return/*#__PURE__*/_jsxs(\"section\",{className:classes.products,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Buy your favorite products\"}),/*#__PURE__*/_jsx(Card,{className:classes[\"button-wrapper\"],children:formIsShown?/*#__PURE__*/_jsx(ItemForm,{onAddNewItem:addNewItemHandler}):/*#__PURE__*/_jsx(\"button\",{onClick:toggleFormHandler,children:\"add item to the cart\"})}),/*#__PURE__*/_jsx(\"ul\",{children:processedItems})]});};export default Products;","map":{"version":3,"sources":["C:/work/udemy react/redux/reduxreact2/src/components/Shop/Products.js"],"names":["ProductItem","classes","useSelector","useDispatch","Card","ItemForm","CartItemsActions","formIsShownActions","Products","props","CartItems","state","items","formIsShown","showForm","FormIsShown","dispatch","toggleFormHandler","addNewItemHandler","info","newItemProduct","title","price","quantity","total","addNewProduct","processedItems","map","item","index","products"],"mappings":"AAAA,MAAOA,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,gBAAT,CAA2BC,kBAA3B,KAAqD,mBAArD,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CAC1B,GAAMC,CAAAA,SAAS,CAAGR,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACC,KAAjB,EAAD,CAA7B,CACA,GAAMC,CAAAA,WAAW,CAAGX,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACG,QAAN,CAAeC,WAA1B,EAAD,CAA/B,CACA,GAAMC,CAAAA,QAAQ,CAAGb,WAAW,EAA5B,CAEA,GAAMc,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9BD,QAAQ,CAACT,kBAAkB,CAACO,QAAnB,EAAD,CAAR,CACD,CAFD,CAGA,GAAMI,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,IAAD,CAAU,CAClC,GAAIC,CAAAA,cAAc,CAAG,CACnBC,KAAK,CAAEF,IAAI,CAACE,KADO,CAEnBC,KAAK,CAAEH,IAAI,CAACG,KAFO,CAGnBC,QAAQ,CAAE,CAHS,CAInBC,KAAK,CAAE,CAJY,CAArB,CAMAR,QAAQ,CAACV,gBAAgB,CAACmB,aAAjB,CAA+BL,cAA/B,CAAD,CAAR,CACAH,iBAAiB,GAClB,CATD,CAWA,GAAMS,CAAAA,cAAc,CAAGhB,SAAS,CAACE,KAAV,CAAgBe,GAAhB,CAAoB,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAC1D,mBACE,KAAC,WAAD,EACE,KAAK,CAAED,IAAI,CAACP,KADd,CAEE,KAAK,CAAEO,IAAI,CAACN,KAFd,CAIE,WAAW,CAAC,mBAJd,EAGOO,KAHP,CADF,CAQD,CATsB,CAAvB,CAUA,mBACE,iBAAS,SAAS,CAAE5B,OAAO,CAAC6B,QAA5B,wBACE,kDADF,cAGI,KAAC,IAAD,EAAM,SAAS,CAAE7B,OAAO,CAAC,gBAAD,CAAxB,UACGY,WAAW,cACV,KAAC,QAAD,EAAU,YAAY,CAAEK,iBAAxB,EADU,cAGV,eAAQ,OAAO,CAAED,iBAAjB,kCAJJ,EAHJ,cAWE,oBAAKS,cAAL,EAXF,GADF,CAeD,CA5CD,CA8CA,cAAelB,CAAAA,QAAf","sourcesContent":["import ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Card from \"../UI/Card\";\nimport ItemForm from \"./ItemForm\";\nimport { CartItemsActions, formIsShownActions } from \"../../store/store\";\n\nconst Products = (props) => {\n  const CartItems = useSelector((state) => state.items);\n  const formIsShown = useSelector((state) => state.showForm.FormIsShown);\n  const dispatch = useDispatch();\n\n  const toggleFormHandler = () => {\n    dispatch(formIsShownActions.showForm());\n  };\n  const addNewItemHandler = (info) => {\n    let newItemProduct = {\n      title: info.title,\n      price: info.price,\n      quantity: 0,\n      total: 0,\n    };\n    dispatch(CartItemsActions.addNewProduct(newItemProduct));\n    toggleFormHandler();\n  };\n\n  const processedItems = CartItems.items.map((item, index) => {\n    return (\n      <ProductItem\n        title={item.title}\n        price={item.price}\n        key={index}\n        description=\"basic description\"\n      />\n    );\n  });\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      {\n        <Card className={classes[\"button-wrapper\"]}>\n          {formIsShown ? (\n            <ItemForm onAddNewItem={addNewItemHandler}></ItemForm>\n          ) : (\n            <button onClick={toggleFormHandler}>add item to the cart</button>\n          )}\n        </Card>\n      }\n      <ul>{processedItems}</ul>\n    </section>\n  );\n};\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}