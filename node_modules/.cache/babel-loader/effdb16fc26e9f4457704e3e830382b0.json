{"ast":null,"code":"var _jsxFileName = \"C:\\\\work\\\\udemy react\\\\redux\\\\reduxreact2\\\\src\\\\components\\\\Shop\\\\ItemForm.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from \"react\";\nimport classes from \"./ItemForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItemForm = () => {\n  _s();\n\n  const [inputValue, setInputValue] = useState('');\n  const [numberInputValue, setNumberInputValue] = useState(0);\n\n  const nameInputChangeHandler = event => {\n    setInputValue(event.target.value);\n  };\n\n  const numberInputChangeHandler = event => {\n    setNumberInputValue(event.target.value);\n  };\n\n  const resetInputs = () => {\n    setNumberInputValuenumberInputValue = 0;\n    inputValue = '';\n  };\n\n  const addNewItemHandler = event => {\n    event.preventDefault();\n    let inputInformation = {\n      title: '',\n      price: 0\n    };\n\n    if (inputValue.trim() !== '' && numberInputValue !== '') {\n      inputInformation.title = inputValue;\n      inputInformation.price = Number(numberInputValue);\n      console.log(inputInformation);\n      resetInputs();\n    } else {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNewItemHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes[\"input-wrapper\"],\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"product-name\",\n          children: \"Product name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"product-name\",\n          type: \"text\",\n          placeholder: \"put your product name here\",\n          onChange: nameInputChangeHandler,\n          value: inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes[\"input-wrapper\"],\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: \"Product price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"price\",\n          type: \"number\",\n          min: \"1\",\n          step: \"0.5\",\n          placeholder: \"1\",\n          onChange: numberInputChangeHandler,\n          value: numberInputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes[\"button-wrapper\"],\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"add new item to the cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ItemForm, \"IcbQaxxB78EMwMaNx03nnjWead4=\");\n\n_c = ItemForm;\nexport default ItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemForm\");","map":{"version":3,"sources":["C:/work/udemy react/redux/reduxreact2/src/components/Shop/ItemForm.js"],"names":["Fragment","useState","classes","ItemForm","inputValue","setInputValue","numberInputValue","setNumberInputValue","nameInputChangeHandler","event","target","value","numberInputChangeHandler","resetInputs","setNumberInputValuenumberInputValue","addNewItemHandler","preventDefault","inputInformation","title","price","trim","Number","console","log"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACK,gBAAD,EAAmBC,mBAAnB,IAA0CN,QAAQ,CAAC,CAAD,CAAxD;;AAEA,QAAMO,sBAAsB,GAAIC,KAAD,IAAW;AACtCJ,IAAAA,aAAa,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACH,GAFD;;AAGA,QAAMC,wBAAwB,GAAIH,KAAD,IAAW;AACxCF,IAAAA,mBAAmB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnB;AACH,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACtBC,IAAAA,mCAAmC,GAAG,CAAtC;AACAV,IAAAA,UAAU,GAAG,EAAb;AACH,GAHD;;AAKF,QAAMW,iBAAiB,GAAIN,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACO,cAAN;AACA,QAAIC,gBAAgB,GAAG;AACnBC,MAAAA,KAAK,EAAE,EADY;AAEnBC,MAAAA,KAAK,EAAE;AAFY,KAAvB;;AAKA,QAAIf,UAAU,CAACgB,IAAX,OAAsB,EAAtB,IAA4Bd,gBAAgB,KAAK,EAArD,EAAwD;AACpDW,MAAAA,gBAAgB,CAACC,KAAjB,GAAyBd,UAAzB;AACAa,MAAAA,gBAAgB,CAACE,KAAjB,GAAyBE,MAAM,CAACf,gBAAD,CAA/B;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAYN,gBAAZ;AACAJ,MAAAA,WAAW;AACd,KALD,MAMK;AACD;AACH;AACF,GAhBD;;AAiBA,sBACE,QAAC,QAAD;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEE,iBAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEb,OAAO,CAAC,eAAD,CAAvB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,cAAZ;AAA2B,UAAA,IAAI,EAAC,MAAhC;AAAuC,UAAA,WAAW,EAAC,4BAAnD;AAAgF,UAAA,QAAQ,EAAEM,sBAA1F;AAAkH,UAAA,KAAK,EAAEJ;AAAzH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAEF,OAAO,CAAC,eAAD,CAAvB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,IAAI,EAAC,QAAzB;AAAkC,UAAA,GAAG,EAAC,GAAtC;AAA0C,UAAA,IAAI,EAAC,KAA/C;AAAqD,UAAA,WAAW,EAAC,GAAjE;AAAqE,UAAA,QAAQ,EAAEU,wBAA/E;AAAyG,UAAA,KAAK,EAAEN;AAAhH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE;AAAK,QAAA,SAAS,EAAEJ,OAAO,CAAC,gBAAD,CAAvB;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAnDD;;GAAMC,Q;;KAAAA,Q;AAqDN,eAAeA,QAAf","sourcesContent":["import { Fragment, useState } from \"react\";\r\nimport classes from \"./ItemForm.module.css\";\r\n\r\nconst ItemForm = () => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [numberInputValue, setNumberInputValue] = useState(0);\r\n\r\n    const nameInputChangeHandler = (event) => {\r\n        setInputValue(event.target.value);\r\n    }\r\n    const numberInputChangeHandler = (event) => {\r\n        setNumberInputValue(event.target.value);\r\n    }\r\n\r\n    const resetInputs = () => {\r\n        setNumberInputValuenumberInputValue = 0;\r\n        inputValue = '';\r\n    }\r\n\r\n  const addNewItemHandler = (event) => {\r\n    event.preventDefault();\r\n    let inputInformation = {\r\n        title: '',\r\n        price: 0\r\n    };\r\n\r\n    if (inputValue.trim() !== '' && numberInputValue !== ''){\r\n        inputInformation.title = inputValue;\r\n        inputInformation.price = Number(numberInputValue);\r\n        console.log(inputInformation);\r\n        resetInputs();\r\n    }\r\n    else {\r\n        return\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={addNewItemHandler}>\r\n        <div className={classes[\"input-wrapper\"]}>\r\n          <label htmlFor=\"product-name\">Product name</label>\r\n          <input name=\"product-name\" type=\"text\" placeholder=\"put your product name here\" onChange={nameInputChangeHandler} value={inputValue}></input>\r\n        </div>\r\n        <div className={classes[\"input-wrapper\"]}>\r\n          <label htmlFor=\"price\">Product price</label>\r\n          <input name=\"price\" type=\"number\" min=\"1\" step=\"0.5\" placeholder=\"1\" onChange={numberInputChangeHandler} value={numberInputValue}></input>\r\n        </div>\r\n        <div className={classes[\"button-wrapper\"]}>\r\n          <button type=\"submit\">add new item to the cart</button>\r\n        </div>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ItemForm;\r\n"]},"metadata":{},"sourceType":"module"}