{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ItemForm.module.css","components/Shop/ProductItem.module.css","components/Cart/CartButton.module.css","components/Shop/Products.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","store/showCartState.js","store/itemsCartState.js","store/showFormState.js","store/store.js","components/UI/Card.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/ItemForm.js","components/Shop/Products.js","App.js","index.js"],"names":["module","exports","cartIsShownSlice","createSlice","name","initialState","cartIsShown","reducers","showCart","state","CartItemsSlice","items","title","quantity","total","price","addNewProduct","action","newArray","push","payload","addItem","forEach","item","index","Number","console","log","removeItem","formIsShownSlice","FormIsShown","showForm","reduxStore","configureStore","reducer","formIsShownActions","actions","CartItemsActions","cartIsShownActions","Card","props","className","classes","card","children","CartItem","useSelector","dispatchItem","useDispatch","toFixed","itemprice","details","onClick","Cart","CartItems","processedItems","map","cart","CartButton","Amount","dispatchCart","cartIsShownStatus","button","badge","MainHeader","header","Layout","ProductItem","description","ItemForm","useState","inputValue","setInputValue","numberInputValue","setNumberInputValue","onSubmit","event","preventDefault","inputInformation","trim","onAddNewItem","htmlFor","type","placeholder","onChange","target","value","min","step","Products","formIsShown","dispatch","toggleFormHandler","products","info","newItemProduct","App","cartItems","itemsAmount","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.2c1440cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__aaVyx\",\"details\":\"CartItem_details__3tfMp\",\"quantity\":\"CartItem_quantity__1lJSA\",\"price\":\"CartItem_price__c6LIW\",\"itemprice\":\"CartItem_itemprice__3OwQn\",\"actions\":\"CartItem_actions__3tcD2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button-wrapper\":\"ItemForm_button-wrapper__1P53V\",\"error-handler\":\"ItemForm_error-handler__4RXQk\",\"input-wrapper\":\"ItemForm_input-wrapper__dSWBE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__3I7k0\",\"price\":\"ProductItem_price__23v2A\",\"actions\":\"ProductItem_actions__9bMcV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__2jS2a\",\"badge\":\"CartButton_badge__amhZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__2S08e\",\"button-wrapper\":\"Products_button-wrapper__d3Ryk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1s9Ge\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__6506v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__3flqM\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialShowCartState = { cartIsShown: false};\r\n\r\n\r\nconst cartIsShownSlice = createSlice({\r\n    name: 'CartIsShown',\r\n    initialState: initialShowCartState,\r\n    reducers: {\r\n        showCart(state) {state.cartIsShown = !state.cartIsShown},\r\n    }\r\n\r\n})\r\n\r\nexport default cartIsShownSlice;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCartItemsState = {items : [{title: 'Test Item 1', quantity: 1, total: 6, price: 6}, {title: 'Test Item 2', quantity: 0, total: 0, price: 10} ] };\r\n\r\n\r\nconst CartItemsSlice = createSlice({\r\n    name: 'CartItems',\r\n    initialState: initialCartItemsState,\r\n    reducers: {\r\n        addNewProduct(state, action){\r\n            let newArray = [...state.items];\r\n            newArray.push(action.payload);\r\n            state.items = newArray;\r\n        },\r\n        addItem(state, action) {\r\n            let newArray = [...state.items];\r\n            let findItem;\r\n\r\n             //looking for item that we currently need through comparing title that we passed through payload and item title\r\n            //then we take current item index to work with this element\r\n            //i could add id to every item to make my work easier\r\n            //but it's also was made to show some another way of doing it\r\n\r\n            state.items.forEach((item, index) => {\r\n            if(item.title == action.payload)\r\n            {\r\n                findItem = index;\r\n                newArray[index].quantity = item.quantity + 1;\r\n                newArray[index].total = Number(item.price) * Number(item.quantity);\r\n                console.log(newArray[index]);\r\n            }\r\n\r\n            return (\r\n            state.items = newArray\r\n            )\r\n    })\r\n},\r\n        removeItem(state, action) { let newArray = [...state.items];\r\n            let findItem;\r\n\r\n            state.items.forEach((item, index) => {\r\n            if(item.title == action.payload)\r\n            {\r\n                findItem = index;\r\n                if(item.quantity != 0){\r\n                    //this if/else statement used to prevent negative values \r\n                newArray[index].quantity = item.quantity - 1;\r\n                newArray[index].total = newArray[index].total - newArray[index].price;\r\n                console.log(newArray[index]);\r\n                }\r\n                else {\r\n                    return\r\n                }\r\n            }\r\n\r\n            return (\r\n            state.items = newArray\r\n            )\r\n    })},\r\n    }\r\n\r\n})\r\n\r\nexport default CartItemsSlice;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialShowFormState = { FormIsShown: false};\r\n\r\n\r\nconst formIsShownSlice = createSlice({\r\n    name: 'FormIsShown',\r\n    initialState: initialShowFormState,\r\n    reducers: {\r\n        showForm(state) {state.FormIsShown = !state.FormIsShown},\r\n    }\r\n\r\n})\r\n\r\nexport default formIsShownSlice;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport cartIsShownSlice from \"./showCartState\";\r\nimport CartItemsSlice from \"./itemsCartState\";\r\nimport formIsShownSlice from \"./showFormState\";\r\n\r\n\r\nconst reduxStore = configureStore({reducer: {showCart: cartIsShownSlice.reducer, items: CartItemsSlice.reducer, showForm: formIsShownSlice.reducer}});\r\n\r\n\r\nexport const formIsShownActions = formIsShownSlice.actions;\r\nexport const CartItemsActions = CartItemsSlice.actions;\r\nexport const cartIsShownActions = cartIsShownSlice.actions;\r\nexport default reduxStore;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import classes from './CartItem.module.css';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { CartItemsActions } from '../../store/store';\n\nconst CartItem = (props) => {\n  const CartItems = useSelector((state) => state.items);\n  const dispatchItem = useDispatch();\n  const { title, quantity, total, price } = props.item;\n\n  const addItemHandler = () => {\n    dispatchItem(CartItemsActions.addItem(title));\n    console.log(title);\n  }\n\n  const removeItemHandler = () => {\n    dispatchItem(CartItemsActions.removeItem(title));\n    console.log(title);\n  }\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{' '}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeItemHandler}>-</button>\n          <button onClick={addItemHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import Card from '../UI/Card';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\nimport {useSelector } from 'react-redux';\n\n\nconst Cart = (props) => {\n  const CartItems = useSelector((state) => state.items);\n\n  const processedItems = CartItems.items.map((item, index) => {\n    if(item.quantity > 0){\n    return <CartItem item={{title: item.title, quantity: item.quantity, total: item.total, price: item.price}} key={index} />\n    }\n    else {\n      return\n    }\n  })\n\n  console.log(CartItems.items)\n\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {/* <CartItem\n          item={{ title: 'Test Item', quantity: 3, total: 18, price: 6 }}\n        /> */}\n        {processedItems}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import classes from './CartButton.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { cartIsShownActions } from '../../store/store';\n\nconst CartButton = (props) => {\n  let Amount = 0;\n  const dispatchCart = useDispatch();\n  const cartIsShownStatus = useSelector((state) => state.showCart.cartIsShown);\n  const cartItems = useSelector((state) => state.items.items);\n\n\n\n  //i could use state in Redux that includes amount of items but in this example i used forEach to show one more way to calculate items amount i cart  \n  cartItems.forEach(item => {\n    Amount = Amount + item.quantity;\n  });\n\n  const toggleCartHandler = () => {\n      dispatchCart(cartIsShownActions.showCart());\n      console.log(cartIsShownStatus);\n  }\n\n  return (\n    <button className={classes.button} onClick={toggleCartHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{Amount}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { CartItemsActions } from '../../store/store';\n\nconst ProductItem = (props) => {\n  const { title, price, description } = props;\n  const dispatchItem = useDispatch();\n\n  const addItemHandler = () => {\n    dispatchItem(CartItemsActions.addItem(title));\n    console.log(title);\n  }\n\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addItemHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import { Fragment, useState } from \"react\";\r\nimport classes from \"./ItemForm.module.css\";\r\nimport Card from \"../UI/Card\";\r\n\r\nconst ItemForm = (props) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [numberInputValue, setNumberInputValue] = useState(0);\r\n\r\n    const nameInputChangeHandler = (event) => {\r\n        setInputValue(event.target.value);\r\n    }\r\n    const numberInputChangeHandler = (event) => {\r\n        setNumberInputValue(event.target.value);\r\n    }\r\n\r\n    const resetInputs = () => {\r\n        setNumberInputValue(0);\r\n        setInputValue('');\r\n    }\r\n\r\n  const addNewItemHandler = (event) => {\r\n    event.preventDefault();\r\n    let inputInformation = {\r\n        title: '',\r\n        price: 0\r\n    };\r\n\r\n    if (inputValue.trim() !== '' && numberInputValue !== ''){\r\n        inputInformation.title = inputValue;\r\n        inputInformation.price = Number(numberInputValue);\r\n        props.onAddNewItem(inputInformation);\r\n        resetInputs();\r\n    }\r\n    else {\r\n        return\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={addNewItemHandler}>\r\n        <Card>\r\n        <div className={classes[\"input-wrapper\"]}>\r\n          <label htmlFor=\"product-name\">Product name</label>\r\n          <input name=\"product-name\" type=\"text\" placeholder=\"put your product name here\" onChange={nameInputChangeHandler} value={inputValue}></input>\r\n        </div>\r\n        {inputValue === '' ? <div className={classes['error-handler']}><p>please write product name</p></div> : ''}\r\n        </Card>\r\n        <Card>\r\n        <div className={classes[\"input-wrapper\"]}>\r\n          <label htmlFor=\"price\">Product price</label>\r\n          <input name=\"price\" type=\"number\" min=\"1\" step=\"0.5\" placeholder=\"1\" onChange={numberInputChangeHandler} value={numberInputValue}></input>\r\n        </div>\r\n        {numberInputValue === 0 ? <div className={classes['error-handler']}><p>please write product price</p></div> : ''}\r\n        </Card>    \r\n        <div className={classes[\"button-wrapper\"]}>\r\n          <button type=\"submit\">Add</button>\r\n        </div>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ItemForm;\r\n","import ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Card from \"../UI/Card\";\nimport ItemForm from \"./ItemForm\";\nimport { CartItemsActions, formIsShownActions } from \"../../store/store\";\n\nconst Products = (props) => {\n  const CartItems = useSelector((state) => state.items);\n  const formIsShown = useSelector((state) => state.showForm.FormIsShown);\n  const dispatch = useDispatch();\n\n  const toggleFormHandler = () => {\n    dispatch(formIsShownActions.showForm());\n  };\n  const addNewItemHandler = (info) => {\n    let newItemProduct = {\n      title: info.title,\n      price: info.price,\n      quantity: 0,\n      total: 0,\n    };\n    dispatch(CartItemsActions.addNewProduct(newItemProduct));\n    toggleFormHandler();\n  };\n\n  const processedItems = CartItems.items.map((item, index) => {\n    return (\n      <ProductItem\n        title={item.title}\n        price={item.price}\n        key={index}\n        description=\"basic description\"\n      />\n    );\n  });\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      {\n        <Card className={classes[\"button-wrapper\"]}>\n          {formIsShown ? (\n            <ItemForm onAddNewItem={addNewItemHandler}></ItemForm>\n          ) : (\n            <button onClick={toggleFormHandler}>add item to the cart</button>\n          )}\n        </Card>\n      }\n      <ul>{processedItems}</ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport {useSelector} from 'react-redux';\n\nfunction App() {\n  const cartItems = useSelector((state) => state.items.items);\n  const cartIsShownStatus = useSelector((state) => state.showCart.cartIsShown);\n\n    //i could use state in Redux that includes amount of items but in this example i used forEach to show one more way to calculate items amount i cart  \n    let itemsAmount = 0;\n    cartItems.forEach(item => {\n      itemsAmount = itemsAmount + item.quantity;\n    });\n  return (\n    <Layout>\n      {cartIsShownStatus && itemsAmount > 0 ? <Cart /> : '' }\n      {cartIsShownStatus ? <Products /> : ''}\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\n\nimport reduxStore from './store/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<Provider store={reduxStore}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}