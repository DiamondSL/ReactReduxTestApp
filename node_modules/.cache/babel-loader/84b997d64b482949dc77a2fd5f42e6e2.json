{"ast":null,"code":"var _jsxFileName = \"C:\\\\work\\\\udemy react\\\\redux\\\\reduxreact2\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //i could use state in Redux that includes amount of items but in this example i used forEach to show one more way to calculate items amount i cart  \n  let itemsAmount = 0;\n  cartItems.forEach(item => {\n    Amount = Amount + item.quantity;\n  });\n  const cartItems = useSelector(state => state.items.items);\n  const cartIsShownStatus = useSelector(state => state.showCart.cartIsShown);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [cartIsShownStatus && itemsAmount > 0 ? /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 47\n    }, this) : '', cartIsShownStatus ? /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 28\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"x1bBn2wmdudHlrWvycSGCJBeDGw=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/work/udemy react/redux/reduxreact2/src/App.js"],"names":["Cart","Layout","Products","useSelector","App","itemsAmount","cartItems","forEach","item","Amount","quantity","state","items","cartIsShownStatus","showCart","cartIsShown"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAAQC,WAAR,QAA0B,aAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,MAAIC,WAAW,GAAG,CAAlB;AACAC,EAAAA,SAAS,CAACC,OAAV,CAAkBC,IAAI,IAAI;AACxBC,IAAAA,MAAM,GAAGA,MAAM,GAAGD,IAAI,CAACE,QAAvB;AACD,GAFD;AAGA,QAAMJ,SAAS,GAAGH,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYA,KAAxB,CAA7B;AACA,QAAMC,iBAAiB,GAAGV,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACG,QAAN,CAAeC,WAA3B,CAArC;AACA,sBACE,QAAC,MAAD;AAAA,eACGF,iBAAiB,IAAIR,WAAW,GAAG,CAAnC,gBAAuC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAAvC,GAAkD,EADrD,EAEGQ,iBAAiB,gBAAG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAkB,EAFtC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAdQT,G;UAMWD,W,EACQA,W;;;KAPnBC,G;AAgBT,eAAeA,GAAf","sourcesContent":["import Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport {useSelector} from 'react-redux';\n\nfunction App() {\n  //i could use state in Redux that includes amount of items but in this example i used forEach to show one more way to calculate items amount i cart  \n  let itemsAmount = 0;\n  cartItems.forEach(item => {\n    Amount = Amount + item.quantity;\n  });\n  const cartItems = useSelector((state) => state.items.items);\n  const cartIsShownStatus = useSelector((state) => state.showCart.cartIsShown);\n  return (\n    <Layout>\n      {cartIsShownStatus && itemsAmount > 0 ? <Cart /> : '' }\n      {cartIsShownStatus ? <Products /> : ''}\n    </Layout>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}