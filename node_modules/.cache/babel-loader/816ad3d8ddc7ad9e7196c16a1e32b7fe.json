{"ast":null,"code":"import Cart from'./components/Cart/Cart';import Layout from'./components/Layout/Layout';import Products from'./components/Shop/Products';import{useSelector}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var cartItems=useSelector(function(state){return state.items.items;});var cartIsShownStatus=useSelector(function(state){return state.showCart.cartIsShown;});//i could use state in Redux that includes amount of items but in this example i used forEach to show one more way to calculate items amount i cart  \nvar itemsAmount=0;cartItems.forEach(function(item){itemsAmount=itemsAmount+item.quantity;});return/*#__PURE__*/_jsxs(Layout,{children:[cartIsShownStatus&&itemsAmount>0?/*#__PURE__*/_jsx(Cart,{}):'',cartIsShownStatus?/*#__PURE__*/_jsx(Products,{}):'']});}export default App;","map":{"version":3,"sources":["C:/work/udemy react/redux/reduxreact2/src/App.js"],"names":["Cart","Layout","Products","useSelector","App","cartItems","state","items","cartIsShownStatus","showCart","cartIsShown","itemsAmount","forEach","item","quantity"],"mappings":"AAAA,MAAOA,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,OAAQC,WAAR,KAA0B,aAA1B,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,GAAMC,CAAAA,SAAS,CAAGF,WAAW,CAAC,SAACG,KAAD,QAAWA,CAAAA,KAAK,CAACC,KAAN,CAAYA,KAAvB,EAAD,CAA7B,CACA,GAAMC,CAAAA,iBAAiB,CAAGL,WAAW,CAAC,SAACG,KAAD,QAAWA,CAAAA,KAAK,CAACG,QAAN,CAAeC,WAA1B,EAAD,CAArC,CAEE;AACA,GAAIC,CAAAA,WAAW,CAAG,CAAlB,CACAN,SAAS,CAACO,OAAV,CAAkB,SAAAC,IAAI,CAAI,CACxBF,WAAW,CAAGA,WAAW,CAAGE,IAAI,CAACC,QAAjC,CACD,CAFD,EAGF,mBACE,MAAC,MAAD,YACGN,iBAAiB,EAAIG,WAAW,CAAG,CAAnC,cAAuC,KAAC,IAAD,IAAvC,CAAkD,EADrD,CAEGH,iBAAiB,cAAG,KAAC,QAAD,IAAH,CAAkB,EAFtC,GADF,CAMD,CAED,cAAeJ,CAAAA,GAAf","sourcesContent":["import Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport {useSelector} from 'react-redux';\n\nfunction App() {\n  const cartItems = useSelector((state) => state.items.items);\n  const cartIsShownStatus = useSelector((state) => state.showCart.cartIsShown);\n\n    //i could use state in Redux that includes amount of items but in this example i used forEach to show one more way to calculate items amount i cart  \n    let itemsAmount = 0;\n    cartItems.forEach(item => {\n      itemsAmount = itemsAmount + item.quantity;\n    });\n  return (\n    <Layout>\n      {cartIsShownStatus && itemsAmount > 0 ? <Cart /> : '' }\n      {cartIsShownStatus ? <Products /> : ''}\n    </Layout>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}