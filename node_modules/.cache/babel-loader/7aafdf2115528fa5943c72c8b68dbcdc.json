{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartItemsState = {\n  items: [{\n    title: 'Test Item 1',\n    quantity: 1,\n    total: 0,\n    price: 6\n  }, {\n    title: 'Test Item 2',\n    quantity: 0,\n    total: 0,\n    price: 3\n  }, {\n    title: 'Test Item 3',\n    quantity: 0,\n    total: 0,\n    price: 10\n  }]\n};\nconst CartItemsSlice = createSlice({\n  name: 'CartItems',\n  initialState: initialCartItemsState,\n  reducers: {\n    addItem(state, action) {\n      let newArray = [...state.items];\n      let findItem;\n      state.items.forEach((item, index) => {\n        console.log(item);\n\n        if (item.title == action.payload) {\n          findItem = state.items[index];\n          console.log(findItem);\n        }\n\n        return state.items.item = newArray // item.title = item.title,\n        // item.price = item.price,\n        // item.quantity = item.quantity + 1, \n        // item.total = Number(item.price) * Number(item.quantity)\n        ;\n      });\n    },\n\n    removeItem(state, action) {\n      state.items = state.items.forEach(item => {\n        if (item.title === action.payload) {\n          return item.quantity = item.quantity - 1, item.total = Number(item.total) - Number(item.price);\n        }\n      });\n    }\n\n  }\n});\nexport default CartItemsSlice;","map":{"version":3,"sources":["C:/work/udemy react/redux/reduxreact2/src/store/itemsCartState.js"],"names":["createSlice","initialCartItemsState","items","title","quantity","total","price","CartItemsSlice","name","initialState","reducers","addItem","state","action","newArray","findItem","forEach","item","index","console","log","payload","removeItem","Number"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,qBAAqB,GAAG;AAACC,EAAAA,KAAK,EAAG,CAAC;AAACC,IAAAA,KAAK,EAAE,aAAR;AAAuBC,IAAAA,QAAQ,EAAE,CAAjC;AAAoCC,IAAAA,KAAK,EAAE,CAA3C;AAA8CC,IAAAA,KAAK,EAAE;AAArD,GAAD,EAA0D;AAACH,IAAAA,KAAK,EAAE,aAAR;AAAuBC,IAAAA,QAAQ,EAAE,CAAjC;AAAoCC,IAAAA,KAAK,EAAE,CAA3C;AAA8CC,IAAAA,KAAK,EAAE;AAArD,GAA1D,EAAmH;AAACH,IAAAA,KAAK,EAAE,aAAR;AAAuBC,IAAAA,QAAQ,EAAE,CAAjC;AAAoCC,IAAAA,KAAK,EAAE,CAA3C;AAA8CC,IAAAA,KAAK,EAAE;AAArD,GAAnH;AAAT,CAA9B;AAGA,MAAMC,cAAc,GAAGP,WAAW,CAAC;AAC/BQ,EAAAA,IAAI,EAAE,WADyB;AAE/BC,EAAAA,YAAY,EAAER,qBAFiB;AAG/BS,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACnB,UAAIC,QAAQ,GAAG,CAAC,GAAGF,KAAK,CAACV,KAAV,CAAf;AACA,UAAIa,QAAJ;AAEAH,MAAAA,KAAK,CAACV,KAAN,CAAYc,OAAZ,CAAoB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrCC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACA,YAAGA,IAAI,CAACd,KAAL,IAAcU,MAAM,CAACQ,OAAxB,EACA;AACIN,UAAAA,QAAQ,GAAGH,KAAK,CAACV,KAAN,CAAYgB,KAAZ,CAAX;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACH;;AAED,eACAH,KAAK,CAACV,KAAN,CAAYe,IAAZ,GAAmBH,QADnB,CAEA;AACA;AACA;AACA;AALA;AAOP,OAfO;AAgBX,KArBa;;AAsBNQ,IAAAA,UAAU,CAACV,KAAD,EAAQC,MAAR,EAAgB;AAACD,MAAAA,KAAK,CAACV,KAAN,GAAcU,KAAK,CAACV,KAAN,CAAYc,OAAZ,CAAoBC,IAAI,IAAI;AAAC,YAAGA,IAAI,CAACd,KAAL,KAAeU,MAAM,CAACQ,OAAzB,EAAiC;AAAE,iBAAQJ,IAAI,CAACb,QAAL,GAAgBa,IAAI,CAACb,QAAL,GAAgB,CAAhC,EAAmCa,IAAI,CAACZ,KAAL,GAAakB,MAAM,CAACN,IAAI,CAACZ,KAAN,CAAN,GAAqBkB,MAAM,CAACN,IAAI,CAACX,KAAN,CAAnF;AAAiG;AAAC,OAAlK,CAAd;AAAkL;;AAtBvM;AAHqB,CAAD,CAAlC;AA8BA,eAAeC,cAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCartItemsState = {items : [{title: 'Test Item 1', quantity: 1, total: 0, price: 6}, {title: 'Test Item 2', quantity: 0, total: 0, price: 3}, {title: 'Test Item 3', quantity: 0, total: 0, price: 10} ] };\r\n\r\n\r\nconst CartItemsSlice = createSlice({\r\n    name: 'CartItems',\r\n    initialState: initialCartItemsState,\r\n    reducers: {\r\n        addItem(state, action) {\r\n            let newArray = [...state.items];\r\n            let findItem;\r\n\r\n            state.items.forEach((item, index) => {\r\n            console.log(item)\r\n            if(item.title == action.payload)\r\n            {\r\n                findItem = state.items[index];\r\n                console.log(findItem);\r\n            }\r\n\r\n            return (\r\n            state.items.item = newArray\r\n            // item.title = item.title,\r\n            // item.price = item.price,\r\n            // item.quantity = item.quantity + 1, \r\n            // item.total = Number(item.price) * Number(item.quantity)\r\n            )\r\n    })\r\n},\r\n        removeItem(state, action) {state.items = state.items.forEach(item => {if(item.title === action.payload){ return (item.quantity = item.quantity - 1, item.total = Number(item.total) - Number(item.price))}})},\r\n    }\r\n\r\n})\r\n\r\nexport default CartItemsSlice;"]},"metadata":{},"sourceType":"module"}